// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20230612151146_FluentIdIncrementInstedOfAnnotation")]
    partial class FluentIdIncrementInstedOfAnnotation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Author", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Biography")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Authors", (string)null);

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Biography = "American writer known for his novels and stories",
                            BirthDate = new DateTime(1896, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "F. Scott Fitzgerald",
                            Nationality = "American"
                        },
                        new
                        {
                            ID = -2,
                            Biography = "American novelist widely known for 'To Kill a Mockingbird'",
                            BirthDate = new DateTime(1926, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Harper Lee",
                            Nationality = "American"
                        },
                        new
                        {
                            ID = -3,
                            Biography = "English novelist and essayist, known for his dystopian novel '1984'",
                            BirthDate = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "George Orwell",
                            Nationality = "British"
                        },
                        new
                        {
                            ID = -4,
                            Biography = "English novelist known for her romantic fiction",
                            BirthDate = new DateTime(1775, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jane Austen",
                            Nationality = "English"
                        },
                        new
                        {
                            ID = -5,
                            Biography = "American writer known for 'The Catcher in the Rye'",
                            BirthDate = new DateTime(1919, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "J.D. Salinger",
                            Nationality = "American"
                        },
                        new
                        {
                            ID = -6,
                            Biography = "English modernist writer and feminist icon",
                            BirthDate = new DateTime(1882, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Virginia Woolf",
                            Nationality = "English"
                        });
                });

            modelBuilder.Entity("Entities.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            ID = -1,
                            AuthorID = -1,
                            ISBN = "9780743273565",
                            NumberOfPages = 218,
                            PublicationDate = new DateTime(1925, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            ID = -2,
                            AuthorID = -2,
                            ISBN = "9780061120084",
                            NumberOfPages = 324,
                            PublicationDate = new DateTime(1960, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 3,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            ID = -3,
                            AuthorID = -3,
                            ISBN = "9780451524935",
                            NumberOfPages = 328,
                            PublicationDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 7,
                            Title = "1984"
                        },
                        new
                        {
                            ID = -4,
                            AuthorID = -4,
                            ISBN = "9780141439518",
                            NumberOfPages = 432,
                            PublicationDate = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            ID = -5,
                            AuthorID = -5,
                            ISBN = "9780316769488",
                            NumberOfPages = 277,
                            PublicationDate = new DateTime(1951, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 2,
                            Title = "The Catcher in the Rye"
                        },
                        new
                        {
                            ID = -6,
                            AuthorID = -6,
                            ISBN = "9780156027328",
                            NumberOfPages = 209,
                            PublicationDate = new DateTime(1927, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 8,
                            Title = "To the Lighthouse"
                        });
                });

            modelBuilder.Entity("Entities.Borrower", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Borrowers", (string)null);

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Address = "123 Main St",
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            ID = -2,
                            Address = "456 Elm St",
                            DateOfBirth = new DateTime(1992, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "9876543210"
                        },
                        new
                        {
                            ID = -3,
                            Address = "789 Oak St",
                            DateOfBirth = new DateTime(1985, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david@example.com",
                            FirstName = "David",
                            LastName = "Johnson",
                            PhoneNumber = "5555555555"
                        },
                        new
                        {
                            ID = -4,
                            Address = "321 Pine St",
                            DateOfBirth = new DateTime(1988, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah@example.com",
                            FirstName = "Sarah",
                            LastName = "Davis",
                            PhoneNumber = "1112223333"
                        },
                        new
                        {
                            ID = -5,
                            Address = "555 Cedar St",
                            DateOfBirth = new DateTime(1995, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael@example.com",
                            FirstName = "Michael",
                            LastName = "Wilson",
                            PhoneNumber = "4445556666"
                        },
                        new
                        {
                            ID = -6,
                            Address = "999 Walnut St",
                            DateOfBirth = new DateTime(1993, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily@example.com",
                            FirstName = "Emily",
                            LastName = "Brown",
                            PhoneNumber = "7778889999"
                        });
                });

            modelBuilder.Entity("Entities.Loan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("BorrowerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BookID");

                    b.HasIndex("BorrowerID");

                    b.ToTable("Loans", (string)null);

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Active = true,
                            BookID = -1,
                            BorrowerID = -1,
                            LoanDate = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -2,
                            Active = true,
                            BookID = -2,
                            BorrowerID = -2,
                            LoanDate = new DateTime(2022, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -3,
                            Active = false,
                            BookID = -3,
                            BorrowerID = -3,
                            LoanDate = new DateTime(2022, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -4,
                            Active = true,
                            BookID = -4,
                            BorrowerID = -4,
                            LoanDate = new DateTime(2022, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -5,
                            Active = true,
                            BookID = -5,
                            BorrowerID = -5,
                            LoanDate = new DateTime(2022, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -6,
                            Active = true,
                            BookID = -6,
                            BorrowerID = -6,
                            LoanDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Entities.Book", b =>
                {
                    b.HasOne("Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Entities.Loan", b =>
                {
                    b.HasOne("Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Borrower", "Borrower")
                        .WithMany("Loans")
                        .HasForeignKey("BorrowerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Borrower");
                });

            modelBuilder.Entity("Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Entities.Borrower", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
